#version 300 es
precision mediump float;
uniform float screenWidth;
uniform float screenHeight;
uniform float radius;
out vec4 fragColor;

vec3 rgb2hsv(vec3 c)
{
vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));

float d = q.x - min(q.w, q.y);
float e = 1.0e-10;
return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

vec3 hsv2rgb(vec3 c)
{
vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void main()
{
float x = gl_FragCoord.x / screenWidth - 0.5;
float y = gl_FragCoord.y / screenHeight - 0.5;
float rate = screenWidth / screenHeight;
float currentRadius = sqrt((x - 0.5)*(x - 0.5) + (y + 0.5)*(y + 0.5)/rate/rate);

float ang = atan(y+0.5 , x-0.5);
vec4 base = vec4(1.0,0.0,0.0,1.0);
vec4 blend = vec4(0.0,1.0,0.0,1.0);

if(ang > radians(90.0) && ang <= radians(180.0)){
vec3 redHsv = rgb2hsv(vec3(1.0,0.0,0.0));
base = vec4(hsv2rgb(vec3(redHsv[0],1.0,(ang - radians(90.0)) / radians(90.0))),1.0);
vec3 greenHsv = rgb2hsv(vec3(0.0,1.0,0.0));
blend = vec4(hsv2rgb(vec3(greenHsv[0],1.0,1.0 - (ang - radians(90.0)) / radians(90.0))),1.0);
}


vec4 result = vec4(1.0) - ((vec4(1.0) - blend) * (vec4(1.0) - base));
if( (currentRadius < radius) && (currentRadius > 0.2)){
//    fragColor = vec4 ( hsv2rgb(vec3(ang / radians(360.0),1.0,1.0)), 1.0 * (currentRadius + sqrt(2) - radius) * 0.7);
    fragColor = vec4(result[0],result[1],result[2],1.0 * (currentRadius + sqrt(2.0) - radius) * 0.7);
}else{
    fragColor = vec4 ( 0.0, 0.0, 0.0, 0.0 );

}
}


